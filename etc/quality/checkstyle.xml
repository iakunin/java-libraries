<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <!--
      Enforces English locale to be independent of the
      default locale which may vary between environments.
      -->
    <property name="localeLanguage" value="en"/>
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>

    <module name="NewlineAtEndOfFile">
        <property name="fileExtensions" value="java"/>
        <property name="lineSeparator" value="lf"/>
    </module>
    <module name="Translation"/>
    <module name="FileLength">
        <property name="max" value="1000"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
        <property name="fileExtensions"
            value="java,txt,xml,xsl,xsd,properties,
            groovy,vm,MF,sh,sql,tokens,g,spec,css,csv"/>
    </module>
    <module name="LineLength">
        <property name="max" value="100"/>
        <property name="ignorePattern" value="^import .*$|^\s+\*\s.*https?:\/\/.+"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="message" value="Line has trailing spaces"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\r\n$"/>
        <property name="message" value="Lines in file should end with Unix-like end of line"/>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="\r?\n[ \t\x0B\f]*\r?\n[ \t\x0B\f]*\r?\n"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Two consecutive empty lines"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\(this\) +\{"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
            value="Using THIS as a lock is a bad practice (use class variable instead)"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\([\w\.]\.class\) +\{"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
            value="Using class as a lock is a bad practice (use class variable instead)"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="org\.apache\.commons\.(codec|lang3?)\.CharEncoding"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Use 'java.nio.charset.StandardCharsets' instead"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="com\.google\.common\.base\.Charsets"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Use 'java.nio.charset.StandardCharsets' instead"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format"
            value="^(?! *(/\*\*|\*|/\*|//))
            .*[\.\-\+%/\*&lt;&gt;](?&lt;!(-&gt;)|&lt;*[A-Za-z]&gt;) *$"/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
            value="Line cannot end with this symbol, move it to the next line"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="^ *="/>
        <property name="fileExtensions" value="java"/>
        <property name="message"
            value="Line cannot start with this symbol, move it to the previous line"/>
    </module>
    <module name="SuppressWarningsFilter"/>
    <module name="TreeWalker">
        <module name="SuppressWarningsHolder"/>
        <!-- Checks for annotations. -->
        <module name="AnnotationUseStyle">
            <property name="elementStyle" value="compact_no_array"/>
            <property name="trailingArrayComma" value="always"/>
            <property name="closingParens" value="ignore"/>
        </module>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="SuppressWarnings"/>
        <!-- Checks for blocks. -->
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>
        <module name="AvoidNestedBlocks"/>
        <!-- Checks for class design. -->
        <module name="InterfaceIsType"/>
        <module name="AbstractClassName"/>
        <module name="MutableException"/>
        <module name="ThrowsCount"/>
        <module name="InnerTypeLast"/>
        <!-- Checks for common coding problems -->
        <module name="ArrayTrailingComma"/>
        <module name="AvoidDoubleBraceInitialization"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="CovariantEquals"/>
        <module name="EqualsAvoidNull"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="IllegalInstantiation"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format"
                value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))
                |\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="InnerAssignment"/>

        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="NestedForDepth"/>
        <module name="NestedIfDepth"/>
        <module name="NestedTryDepth"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="IllegalCatch"/>
        <module name="EmptyCatchBlock"/>
        <module name="IllegalThrows"/>
        <module name="IllegalType"/>
        <module name="DeclarationOrder"/>
        <module name="ParameterAssignment"/>
        <module name="ExplicitInitialization"/>
        <module name="DefaultComesLast"/>
        <module name="FallThrough"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="UnnecessaryParentheses"/>
        <module name="OneStatementPerLine"/>
        <module name="OneTopLevelClass"/>
        <!-- Checks for imports. -->
        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport"/>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <module name="ImportOrder"/>
        <module name="NoLineWrap"/>
        <!-- Checks for Javadoc comments. -->
        <module name="JavadocType">
            <property name="allowUnknownTags" value="true"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>
        <module name="JavadocTagContinuationIndentation"/>
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocContentLocation"/>
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module>
        <!-- Metrics. -->
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassDataAbstractionCoupling"/>
        <module name="ClassFanOutComplexity">
            <property name="max" value="30"/>
        </module>
        <module name="CyclomaticComplexity"/>
        <module name="NPathComplexity"/>
        <module name="JavaNCSS"/>
        <!-- Miscellaneous other checks. -->
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
        <module name="Indentation">
            <property name="arrayInitIndent" value="0"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="TrailingComment"/>
        <module name="OuterTypeFilename"/>
        <!-- Modifier Checks. -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>
        <!-- Checks for Naming Conventions. -->
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName">
            <property name="format" value="^(id|ip|to|ex|[a-zA-Z0-9]{3,50})$"/>
            <property name="tokens" value="VARIABLE_DEF"/>
            <message key="name.invalidPattern"
                value="Local finale variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LocalVariableName">
            <property name="format" value="^(id|ip|to|ex|[a-zA-Z0-9]{3,50})$"/>
            <message key="name.invalidPattern"
                value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^(ex|[a-z]{3,12})$"/>
            <message key="name.invalidPattern"
                value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MemberName">
            <property name="format" value="^(id|ip|to|ex|[a-zA-Z0-9]{3,50})$"/>
            <message key="name.invalidPattern"
                value="Member name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z0-9]{2,35}[a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
                value="Method name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="^([A-Z_]{1,35})$"/>
            <message key="name.invalidPattern"
                value="Class parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^([A-Z_]{1,35})$"/>
            <message key="name.invalidPattern"
                value="Method parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="InterfaceTypeParameterName"/>
        <module name="LambdaParameterName"/>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
                value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ParameterName">
            <property name="format" value="^(id|ip|to|ex|[a-zA-Z0-9]{3,50})$"/>
            <message key="name.invalidPattern"
                value="Parameter name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>
        <!-- Checks for Size Violations. -->
        <module name="ExecutableStatementCount">
            <property name="max" value="20"/>
        </module>
        <module name="AnonInnerLength"/>
        <module name="MethodLength"/>
        <module name="ParameterNumber">
            <property name="max" value="6"/>
        </module>
        <module name="OuterTypeNumber"/>
        <module name="MethodCount"/>
        <!-- Checks for whitespace. -->
        <module name="GenericWhitespace"/>
        <module name="SingleSpaceSeparator"/>
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="AnnotationLocation"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
        <module name="EmptyLineSeparator">
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
            <property name="tokens"
                value="IMPORT,CLASS_DEF,INTERFACE_DEF,ENUM_DEF,
                STATIC_INIT,INSTANCE_INIT,METHOD_DEF,CTOR_DEF"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
    </module>
    <module name="RegexpMultiline">
        <property name="format" value="new java.util.ArrayList(?:&lt;.*?&gt;)?\(\)"/>
        <property name="message" value="ArrayList should be initialized with a size parameter"/>
        <property name="fileExtensions" value="java"/>
    </module>
    <module name="UniqueProperties"/>
</module>
